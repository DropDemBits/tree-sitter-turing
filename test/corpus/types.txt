================================================================================
primitive ty - simple
================================================================================

type a : boolean
type a : addressint
type a : int
type a : int1
type a : int2
type a : int4
type a : nat
type a : nat1
type a : nat2
type a : nat4
type a : real
type a : real4
type a : real8
type a : char
type a : string

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type))
  (type_declaration
    (identifier)
    (primitive_type)))

================================================================================
primitive ty - const sized
================================================================================

type a : char(a)
type a : string(a)

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    (identifier)
    (primitive_type
      (charseq_size
        (identifier))))
  (type_declaration
    (identifier)
    (primitive_type
      (charseq_size
        (identifier)))))

================================================================================
primitive ty - dyn sized
================================================================================

type a : char(*)
type a : string(*)

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    (identifier)
    (primitive_type
      (charseq_size)))
  (type_declaration
    (identifier)
    (primitive_type
      (charseq_size))))

================================================================================
range type - start and end
================================================================================

type a : 1 .. 2

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    name: (identifier)
    type_spec: (range_type
      start: (literal_expression
        (integer_literal))
      end: (literal_expression
        (integer_literal)))))

================================================================================
range type - only start
================================================================================

type a : 1 ..

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    name: (identifier)
    type_spec: (range_type
      start: (literal_expression
        (integer_literal))
      end: (MISSING identifier))))

================================================================================
range type - only end
================================================================================

type a : .. 2

--------------------------------------------------------------------------------

(source_file
  (type_declaration
    name: (identifier)
    type_spec: (range_type
      start: (MISSING identifier)
      end: (literal_expression
        (integer_literal)))))

================================================================================
range type - no bounds
================================================================================

type a : ..

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier)))

================================================================================
expression in type position
================================================================================

type a : 1 + 1

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier)
    (binary_expression
      (literal_expression
        (integer_literal))
      (literal_expression
        (integer_literal)))))
